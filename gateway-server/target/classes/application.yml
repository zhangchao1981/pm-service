server:
  port: 8001
eureka:
  client:
    service-url:
      defaultZone: http://127.0.0.1:7001/eureka
#    registry-fetch-interval-seconds: 5
  instance:
#    lease-expiration-duration-in-seconds: 15
#    lease-renewal-interval-in-seconds: 5
    prefer-ip-address: true
#    instance-id: ${spring.cloud.client.ip-address}:${spring.application.name}:${server.port}





spring:
  application:
    name: gateway-server
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true  #开启从注册中心动态创建路由的功能，利用微服务名进行路由
      filter:
        remove-hop-by-hop:
          headers:
            # 以下是去掉网关默认去掉的请求响应头
            - trailer
            - te
            - keep-alive
            - transfer-encoding
            - upgrade
            - proxy-authenticate
            - connection
            - proxy-authorization
            - x-application-context
            # 以下是去掉服务层面定义的跨域
            - access-control-allow-credentials
            - access-control-allow-headers
            - access-control-allow-methods
            - access-control-allow-origin
            - access-control-max-age
            - vary
      globalcors:
        corsConfigurations:
          '[/**]':       #匹配所有请求
            allowCredentials: true
            allowedOrigins: "*"   #跨域处理 允许所有的域
            allowedHeaders: "*"
            allowedMethods: "*"   # 支持的方法
            maxAge: 3628800
      routes: #配置微服务路由
        - id: work-route
          uri: lb://doc
          predicates:
            - Path=/pjdata/**
  #          filters:
  #            - name: RequestRateLimiter #请求数限流 名字不能随便写 ，使用默认的facatory
  #              args:
  #                key-resolver: "#{@ipKeyResolver}"
  #                redis-rate-limiter.replenishRate: 1
  #                redis-rate-limiter.burstCapacity: 1
  #Redis配置
  redis:
    host: 192.168.211.132
    port: 6379

management:
  endpoint:
    gateway:
      enabled: true
    web:
      exposure:
        include: true